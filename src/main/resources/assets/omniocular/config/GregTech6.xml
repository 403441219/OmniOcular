<!--Date: 2018/02/17-->
<!--Version: 6.07.01-->
<oo>

    <!-- 蒸汽锅炉容量上限 -->
	<init>
		function getBoilerCapacity(mID){
			switch(mID){
				case 1200:{return 160000;break;}
				case 1201:{return 200000;break;}
				case 1202:{return 240000;break;}
				case 1203:{return 160000;break;}
				case 1204:{return 320000;break;}
				case 1205:{return 960000;break;}
				case 1206:{return 1120000;break;}
				case 1207:{return 1280000;break;}
				case 1208:{return 1280000;break;}
				case 1250:{return 4 * getBoilerCapacity(mID - 50);break;}
				case 1251:{return 4 * getBoilerCapacity(mID - 50);break;}
				case 1252:{return 4 * getBoilerCapacity(mID - 50);break;}
				case 1253:{return 4 * getBoilerCapacity(mID - 50);break;}
				case 1254:{return 4 * getBoilerCapacity(mID - 50);break;}
				case 1255:{return 4 * getBoilerCapacity(mID - 50);break;}
				case 1256:{return 4 * getBoilerCapacity(mID - 50);break;}
				case 1257:{return 4 * getBoilerCapacity(mID - 50);break;}
				case 1258:{return 4 * getBoilerCapacity(mID - 50);break;}
			}
		}
	</init>

	<!-- 判断蒸汽机器爆炸半径 -->
	<init>
		function ExplodeRoundSU(cap){
			if((Math.sqrt(cap) / 100) > 1){
				return Math.floor((Math.sqrt(cap) / 100));
			}
			return 1;
		}
	</init>

	<!-- 判断靠近锅炉所受伤害数值 -->
	<init>
		function HeatDamageSU(enCap,SUCap,isChisel){
			if(isChisel == 0){
				if(Math.floor((enCap + SUCap / 2) / 2000) < 10){
					return Math.floor((enCap + SUCap / 2) / 2000);
				}
				return 10;
			}
			return Math.floor((enCap + SUCap / 2) / 2000)
		}
	</init>

	<!-- 引擎额定输出功率 -->
	<init>
		function getEngineOutput(mID){
			switch(mID){
				case 1300:{return 8;break;}
				case 1301:{return 10;break;}
				case 1302:{return 12;break;}
				case 1303:{return 8;break;}
				case 1304:{return 16;break;}
				case 1305:{return 48;break;}
				case 1306:{return 56;break;}
				case 1307:{return 64;break;}
				case 1308:{return 64;break;}
				case 1309:{return 12;break;}
				case 1310:{return 8;break;}
				case 1311:{return 32;break;}
				case 1350:{return 4 * getEngineOutput(mID - 50);break;}
				case 1351:{return 4 * getEngineOutput(mID - 50);break;}
				case 1352:{return 4 * getEngineOutput(mID - 50);break;}
				case 1353:{return 4 * getEngineOutput(mID - 50);break;}
				case 1354:{return 4 * getEngineOutput(mID - 50);break;}
				case 1355:{return 4 * getEngineOutput(mID - 50);break;}
				case 1356:{return 4 * getEngineOutput(mID - 50);break;}
				case 1357:{return 4 * getEngineOutput(mID - 50);break;}
				case 1358:{return 4 * getEngineOutput(mID - 50);break;}
				case 1359:{return 4 * getEngineOutput(mID - 50);break;}
				case 1360:{return 4 * getEngineOutput(mID - 50);break;}
				case 1361:{return 4 * getEngineOutput(mID - 50);break;}
			}
		}
	</init>

	<!-- 限定上下限 -->
	<init>
		function bind(aMin,aMax,aValue){
			if(aValue < aMin){
				return aMin;
			}
			if(aValue > aMax){
				return aMax;
			}
			return aValue;
		}
	</init>

	<!-- 电压等级 -->
	<init>
		function ID2EUTier(mID,Type){
			if(Type == 0){
				switch(mID){
					case 10011:{return 32;break;}
					case 10012:{return 128;break;}
					case 10013:{return 512;break;}
					case 10014:{return 2048;break;}					
					case 10015:{return 8192;break;}					
				}
			}
		}
	</init>

    <!-- 坩埚   -->
    <tileentity id="gt.multitileentity.smeltery">
	    <line displayname="当前温度">
		return nbt['gt.temperature']+BLUE+" K"
        </line>
		<line displayname="熔炼物种数">
		return nbt['gt.materials']['size']+BLUE+" 种"
        </line>
		<line displayname="熔炼物1情况">
		return nbt['gt.materials']['0']['a'] / 420076800+BLUE+"份 "+RED+nbt['gt.materials']['0']['i']
        </line>
		<line displayname="熔炼物2情况">
		return nbt['gt.materials']['1']['a'] / 420076800+BLUE+"份 "+RED+nbt['gt.materials']['1']['i']
        </line>
		<line displayname="熔炼物3情况">
		return nbt['gt.materials']['2']['a'] / 420076800+BLUE+"份 "+RED+nbt['gt.materials']['2']['i']
        </line>
		<line displayname="熔炼物4情况">
		return nbt['gt.materials']['3']['a'] / 420076800+BLUE+"份 "+RED+nbt['gt.materials']['3']['i']
        </line>
		<line displayname="熔炼物5情况">
		return nbt['gt.materials']['4']['a'] / 420076800+BLUE+"份 "+RED+nbt['gt.materials']['4']['i']
        </line>
		<line displayname="熔炼物6情况">
		return nbt['gt.materials']['5']['a'] / 420076800+BLUE+"份 "+RED+nbt['gt.materials']['5']['i']
        </line>
		<line displayname="熔炼物7情况">
		return nbt['gt.materials']['6']['a'] / 420076800+BLUE+"份 "+RED+nbt['gt.materials']['6']['i']
        </line>
		<line displayname="熔炼物8情况">
		return nbt['gt.materials']['7']['a'] / 420076800+BLUE+"份 "+RED+nbt['gt.materials']['7']['i']
        </line>
		<line displayname="熔炼物9情况">
		return nbt['gt.materials']['8']['a'] / 420076800+BLUE+"份 "+RED+nbt['gt.materials']['8']['i']
        </line>
	</tileentity>
	
	<!-- 模具   -->
	<tileentity id="gt.multitileentity.mold">
	    <line displayname="当前温度">
		return nbt['gt.temperature']+BLUE+" K"
        </line>
		<line displayname="当前铸造">
		return nbt['gt.materials']['m']
        </line>
	</tileentity>
	
	<!-- 蒸汽锅炉 -->
	<tileentity id="gt.multitileentity.tank.boiler_steam">
		<line displayname="爆炸警告1">
			if((nbt['gt.tank.1']['Amount'] / getBoilerCapacity(nbt['gt.mte.id'])) > 0.10){
				return RED + "此时使用扳手拆除会造成威力" + ExplodeRoundSU(nbt['gt.tank.1']['Amount']) + "点的爆炸";
			}
		</line>

		<line displayname="爆炸警告2">
			if((nbt['gt.tank.1']['Amount'] / getBoilerCapacity(nbt['gt.mte.id'])) > 0.46){
				return RED + "此时使用凿子清理锅炉会造成威力" + ExplodeRoundSU(nbt['gt.tank.1']['Amount']) + "点的爆炸";
			}
		</line>

		<line displayname="烫伤警告1">
			if((nbt['gt.energy'] != undefined) && (nbt['gt.tank.1']['Amount'] != undefined)){
				if((nbt['gt.energy'] + nbt['gt.tank.1']['Amount'] / 2) > 2000){
					return RED + "此时靠近锅炉会受到" + HeatDamageSU(nbt['gt.energy'],nbt['gt.tank.1']['Amount'],0) + "点伤害";
				}
			}

			if(nbt['gt.energy'] != undefined){
				if(nbt['gt.tank.1']['Amount'] != undefined){
					if((nbt['gt.energy'] + nbt['gt.tank.1']['Amount'] / 2) > 2000){
						return RED + "此时靠近锅炉会受到" + HeatDamageSU(nbt['gt.energy'],nbt['gt.tank.1']['Amount'],0) + "点伤害";
					}
				}
				if((nbt['gt.energy']) > 2000){
					return RED + "此时靠近锅炉会受到" + HeatDamageSU(nbt['gt.energy'],0,0) + "点伤害";
				}
			}
			if(nbt['gt.tank.1']['Amount'] != undefined){
				if((nbt['gt.tank.1']['Amount'] / 2) > 2000){
					return RED + "此时靠近锅炉会受到" + HeatDamageSU(0,nbt['gt.tank.1']['Amount'],0) + "点伤害";
				}
			}
		</line>

		<line displayname="烫伤警告2">
			if((nbt['gt.energy'] != undefined) && (nbt['gt.tank.1']['Amount'] != undefined)){
				if((nbt['gt.energy'] + nbt['gt.tank.1']['Amount'] / 2) > 2000){
					return RED + "此时使用凿子清理锅炉会受到" + HeatDamageSU(nbt['gt.energy'],nbt['gt.tank.1']['Amount'],1) + "点伤害";
				}
			}

			if(nbt['gt.energy'] != undefined){
				if(nbt['gt.tank.1']['Amount'] != undefined){
					if((nbt['gt.energy'] + nbt['gt.tank.1']['Amount'] / 2) > 2000){
						return RED + "此时使用凿子清理锅炉会受到" + HeatDamageSU(nbt['gt.energy'],nbt['gt.tank.1']['Amount'],1) + "点伤害";
					}
				}
				if((nbt['gt.energy']) > 2000){
					return RED + "此时使用凿子清理锅炉会受到" + HeatDamageSU(nbt['gt.energy'],0,1) + "点伤害";
				}
			}
			if(nbt['gt.tank.1']['Amount'] != undefined){
				if((nbt['gt.tank.1']['Amount'] / 2) > 2000){
					return RED + "此时使用凿子清理锅炉会受到" + HeatDamageSU(0,nbt['gt.tank.1']['Amount'],1) + "点伤害";
				}
			}
		</line>

		<line displayname="工作状态">
			if(nbt['gt.tank.1']['Amount'] * 2 >= getBoilerCapacity(nbt['gt.mte.id'])){
				return BLUE + "运行";
			}
			if(nbt['gt.tank.0'] != undefined){
				return BLUE + "预热";
			}
			if(nbt['gt.energy'] != undefined){
				return BLUE + "干烧";
			}
			return BLUE + "停机";
		</line>

		<line displayname="效率">
			if(nbt['gt.eff'] != undefined){
				return nbt['gt.eff'] / 100 + "%";
			}
			return "100.00%";
		</line>

		<line displayname="热量存量">
			if(nbt['gt.energy'] != undefined){
				return nbt['gt.energy'] + "/" + getBoilerCapacity(nbt['gt.mte.id']) + " - " + Math.floor(nbt['gt.energy'] / getBoilerCapacity(nbt['gt.mte.id']) * 10000) / 100 + "%";
			}
			return "0/" + getBoilerCapacity(nbt['gt.mte.id']) + " - " + "0.00%";
		</line>

	    <line displayname="水类型">
			return fluidName(nbt['gt.tank.0']['FluidName']);
		</line>

		<line displayname="水存量">
			return nbt['gt.tank.0']['Amount'] + "/4000" + BLUE + "L";
		</line>

		<line displayname="蒸汽存量">
			return nbt['gt.tank.1']['Amount'] + "/" + getBoilerCapacity(nbt['gt.mte.id']) + " - " + Math.floor(nbt['gt.tank.1']['Amount'] / getBoilerCapacity(nbt['gt.mte.id']) * 10000) / 100 + "%";
		</line>
		
	</tileentity>
	
	<!-- 蒸汽引擎 -->
	<tileentity id="gt.multitileentity.engine.kinetic_steam">
		<line displayname="过热警告">
			return RED + "若热量存量达到100%，则会强制停机";
		</line>

		<line displayname="工作状态">
			if(nbt['gt.stopped'] == 1){
				return BLUE + "停机";
			}
			if(nbt['gt.active'] == 1){
				return BLUE + "运行";
			}
			return BLUE + "预热";
		</line>

		<line displayname="输出功率">
			if(nbt['gt.active'] == 1){
				return getEngineOutput(nbt['gt.mte.id']) * ((nbt['gt.visual'] + 1) / 16) + BLUE + " KU/t";
			}
			return "机器未运行 - 0" + BLUE + " KU/t";
		</line>

	    <line displayname="热量存量">
			if(nbt['gt.energy'] != undefined){
				return nbt['gt.energy'] + "/" + bind(2000,2147483647,getEngineOutput(nbt['gt.mte.id']) * 2000) + BLUE + " KU" + WHITE + " - " + Math.floor(nbt['gt.energy'] / bind(2000,2147483647,getEngineOutput(nbt['gt.mte.id']) * 2000) * 10000) / 100 + "%";
			}
			return "0/" + bind(2000,2147483647,getEngineOutput(nbt['gt.mte.id']) * 2000) + BLUE + " KU" + WHITE + " - " + "0%";
		</line>

		<line displayname="蒸汽存量">
			return nbt['gt.tank.0']['Amount'] + "/" + bind(200,2147483647,getEngineOutput(nbt['gt.mte.id']) * 200) + BLUE + " L"
		</line>

	</tileentity>
	
	<!-- 电力引擎 -->
	<tileentity id="gt.multitileentity.engine.kinetic_electricity">
		<line displayname="工作状态">
			if(nbt['gt.active'] == 1){
				if(nbt['gt.active.energy'] == 1){
					return BLUE + "运行";
				}
				return BLUE + "待机";
			}
			return BLUE + "停机";
		</line>

		<line displayname="输入功率">
			if(nbt['gt.mode'] == undefined){
				return ID2EUTier(nbt['gt.mte.id'],0) + BLUE + " EU/t" + WHITE + " - " +  "1" + BLUE + " A";
			}
			if(nbt['gt.mode'] < 7){
				return ID2EUTier(nbt['gt.mte.id'],0) / 2 + BLUE + " EU/t" + WHITE + " - " + Math.floor(1 / (8 - nbt['gt.mode']) * 1000) / 1000 + BLUE + " A";
			}
			return ID2EUTier(nbt['gt.mte.id'],0) * (nbt['gt.mode'] + 1) / 16 + BLUE + " EU/t" + WHITE + " - " + "1" + BLUE + " A";
		</line>

		<line displayname="输出功率">
			if(nbt['gt.mode'] == undefined){
				return ID2EUTier(nbt['gt.mte.id'],0) / 2 + BLUE + " EU/t";
			}
			return ID2EUTier(nbt['gt.mte.id'],0) * (nbt['gt.mode'] + 1) / 32 + BLUE + " EU/t";
		</line>

	</tileentity
	>
	<!-- 管道   -->
	<tileentity id="gt.multitileentity.connector.pipe.fluid">
	    <line displayname="内容物">
	    if(nbt['gt.tank.0']['Amount']!=undefined){
		return fluidName(nbt['gt.tank.0']['FluidName'])+": "+GREEN+nbt['gt.tank.0']['Amount']+BLUE+" L"}
		</line>
	</tileentity>
	
	<!-- 加热器   -->
	<tileentity id="gt.multitileentity.generator.burning_solid">
	    <line displayname="剩余热量">
		if(nbt['gt.energy']!=undefined){
		return nbt['gt.energy']+BLUE+" HU"}
		</line>  
		<line displayname="燃料情况">
		if(nbt['gt.invlist']['0']['Damage']!=8200)
		if(nbt['gt.invlist']['0']['Damage']!=8201){
		return nbt['gt.invlist']['0']['Count']+BLUE+"个 "+RED+name(nbt['gt.invlist']['0'])}	
		</line>
		<line displayname="灰烬情况">
		switch(nbt['gt.invlist']['0']['Damage']) {
		case 8200:return nbt['gt.invlist']['0']['Count']+BLUE+"个 "+RED+name(nbt['gt.invlist']['0']);
		    break;
		case 8201:return nbt['gt.invlist']['0']['Count']+BLUE+"个 "+RED+name(nbt['gt.invlist']['0']);
		    break;}
		</line>
		<line displayname="灰烬情况">
		return nbt['gt.invlist']['1']['Count']+BLUE+"个 "+RED+name(nbt['gt.invlist']['1'])
		</line>
	</tileentity>

	<!-- 油泉 -->
	<tileentity id="gt.multitileentity.fluid.spring">
	    <line displayname="生成速度">
		if(nbt['gt.spring']['Amount'] > 0){
			if(nbt['gt.spring']['Amount'] < 20){
				return nbt['gt.spring']['Amount'] + BLUE + " Tick/桶";
			}
			if(nbt['gt.spring']['Amount'] < 1200){
				return nbt['gt.spring']['Amount'] / 20 + BLUE + " 秒/桶";
			}
			if(nbt['gt.spring']['Amount'] < 72000){
				return nbt['gt.spring']['Amount'] / 1200 + BLUE + " 分钟/桶";
			}
			if(nbt['gt.spring']['Amount'] < 4320000){
				return nbt['gt.spring']['Amount'] / 72000 + BLUE + " 小时/桶";
			}
			if(nbt['gt.spring']['Amount'] < 103680000){
				return nbt['gt.spring']['Amount'] / 4320000 + BLUE + " 天/桶";
			}
		}
		</line>

		<line displayname="流体种类">
		if(nbt['gt.spring']['FluidName'] != null){
			return fluidName(nbt['gt.spring']['FluidName']);
		}
		</line>  

	</tileentity>

</oo>
